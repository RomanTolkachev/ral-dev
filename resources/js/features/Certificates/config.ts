import { TDefaultPaginationRequest } from "@/shared/types/pagination";
import { TCertificateModel } from "./model";


const DICTIONARY: Record<TCertificateModel, string> = {
    applicantFilialFullNames: "applicantFilialFullNames / Полное наименование филиалов (заявителя)",
    applicantLegalSubjectType: "applicantLegalSubjectType / Тип заявителя",
    applicantName: "applicantName / Полное наименование (заявителя)",
    applicantOpf: "applicantOpf / Организационно-правовая форма (заявителя)",
    applicantType: "applicantType / Вид заявителя",
    blankNumber: "blankNumber / Номер бланка",
    certificate_id: "certificate_id",
    certificate_link: "certificate_link",
    certificate_name: "certificate_name / Регистрационный номер сертификата",
    certificate_status: "certificate_status / Статус сертификата",
    certificationAuthorityAttestatRegNumber: "certificationAuthorityAttestatRegNumber / Номер записи в РАЛ органа по сертификации",
    certObjectType: "certObjectType / Тип объекта сертификации",
    certType: "certType / Тип сертификата",
    date: "date / Дата регистрации сертификата",
    endDate: "endDate / Дата окончания действия сертификата",
    expertFio: "expertFio",
    expertSnils: "expertSnils",
    group: "group / Группа продукции ЕАЭС",
    id: "id",
    idRalCertificationAuthority: "idRalCertificationAuthority",
    manufacterFilialFullNames: "manufacterFilialFullNames / Полное наименование филиалов (изготовителя)",
    manufacterLegalSubjectType: "manufacterLegalSubjectType / Тип изготовителя",
    manufacterName: "manufacterName / Полное наименование (изготовителя)",
    manufacterOpf: "manufacterOpf / Организационно-правовая форма (изготовителя)",
    manufacterType: "manufacterType",
    previous_status: "previous_status / Предыдущий статус",
    previous_update_status_date: "previous_update_status_date / Дата изменения статуса (предыдущего)",
    productBatchSize: "productBatchSize / Размер партии",
    productFullName: "productFullName / Общее наименование продукции",
    productIdentificationArticle: "productIdentificationArticle",
    productIdentificationGtin: "productIdentificationGtin",
    productIdentificationModel: "productIdentificationModel / Модель",
    productIdentificationName: "productIdentificationName / Наименование (обозначение) продукции",
    productIdentificationSort: "productIdentificationSort",
    productIdentificationTrademark: "productIdentificationTrademark / Торговая марка",
    productIdentificationType: "productIdentificationType / Тип (продукции)",
    productOrig: "productOrig / Происхождение продукции",
    technicalReglaments: "technicalReglaments / Технические регламенты",
    update_status_date: "update_status_date / Дата изменения статуса (актуального)",

    // РАЛ

    address: "адрес АЛ",
    applicantFullName: "applicantFullName",
    applicantINN: "applicantINN",
    fullName: "fullName",
    link: "ссылка",
    nameType: "nameType",
    nameTypeActivity: "nameTypeActivity",
    new_status_AL: "new_status_AL",
    NP_status_change_date: "Дата изм. статуса НЧ",
    NPstatus: "NPstatus",
    oaDescription: "oaDescription",
    old_status_AL: "old_status_AL",
    ral_short_info_view__id: "ral id",
    regDate: "regDate",
    RegNumber: "Рег. номер",
    regulation: "regulation",
    regulations: "regulations",
    status_change_date: "status_change_date",
    tnved: "tnved",

    // заявитель
    addlRegInfo: "ЗА_addlRegInfo",
    certificate_applicant__certificate_id: "ЗА_certificate_applicant__certificate_id",
    certificate_applicant__fullName: "ЗА_certificate_applicant__fullName",
    certificate_applicant__id: "ЗА_certificate_applicant__id",
    certificate_applicant__regDate: "ЗА_certificate_applicant__regDate",
    firstName: "ЗА_firstName",
    headPosition: "ЗА_headPosition",
    idApplicantType: "ЗА_idApplicantType",
    idEgrul: "ЗА_idEgrul",
    idLegalForm: "ЗА_idLegalForm",
    idLegalSubject: "ЗА_idLegalSubject",
    idLegalSubjectType: "ЗА_idLegalSubjectType",
    idPerson: "ЗА_idPerson",
    idPersonDoc: "ЗА_idPersonDoc",
    inn: "ЗА_inn",
    isEecRegister: "ЗА_isEecRegister",
    kpp: "ЗА_kpp",
    ogrn: "ЗА_ogrn",
    ogrnAssignDate: "ЗА_ogrnAssignDate",
    passportIssueDate: "ЗА_passportIssueDate",
    passportIssuedBy: "ЗА_passportIssuedBy",
    passportNum: "ЗА_passportNum",
    patronymic: "ЗА_patronymic",
    regOrganName: "ЗА_regOrganName",
    shortName: "ЗА_shortName",
    surname: "ЗА_surname",

    // certification_authority

    accredOrgName: "ATT_accredOrgName",
    attestatEndDate: "ATT_attestatEndDate",
    attestatRegDate: "ATT_attestatRegDate",
    attestatRegNumber: "ATT_attestatRegNumber",
    certification_authority__certificate_id: "ATT_certification_authority__certificate_id",
    certification_authority__fullName: "ATT_certification_authority__fullName",
    certification_authority__id: "ATT_certification_authority__id",
    idCertificationAuthority: "ATT_idCertificationAuthority",
    idRal: "ATT_idRal",

    status_change__id: "status_change_id",
    // certificate_id: "status_change_certificate_id", 
    status: "status",
    begin_date: "begin_date",
    end_date: "end_date",
    comment: "comment",
    publish_date: "publish_date",
    status_changes_by: "status_changes_by",
    idChangeStatus: "idChangeStatus",

}

const DEFAULT_COLUMNS: TCertificateModel[] = [
    "certificate_name",
    "blankNumber",
    "certificate_status",
    "certificate_link",
    "productIdentificationGtin",
    "update_status_date",
    "previous_update_status_date",
    "previous_status",
    "date",
    "endDate",
    "technicalReglaments",
    "group",
    "certType",
    "certObjectType",
    "applicantLegalSubjectType",
    "applicantType",
    "applicantName",
    "applicantOpf",
    "applicantFilialFullNames",
    "manufacterLegalSubjectType",
    "manufacterType",
    "manufacterName",
    "manufacterOpf",
    "manufacterFilialFullNames",
    "idRalCertificationAuthority",
    "certificationAuthorityAttestatRegNumber",
    "productOrig",
    "productFullName",
    "productBatchSize",
    "productIdentificationName",
    "productIdentificationType",
    "productIdentificationTrademark",
    "productIdentificationModel",
    "productIdentificationArticle",
    "productIdentificationSort",
    "expertFio",
    "expertSnils",
    'id',  // id обязательно т.к без него не будут работать реляции
    "certificate_id",


    'link',
    'nameType',
    // 'nameTypeActivity',
    'fullName',
    // 'address',
    // 'oaDescription',
    'NPstatus',
    'ral_short_info_view__id',
    // 'regDate',
    'NP_status_change_date',
    'applicantFullName',
    'old_status_AL',
    'new_status_AL',
    'applicantINN',
    'RegNumber',
    'status_change_date',
    // 'regulations',
    // 'tnved',
    // 'regulation',

    'certificate_applicant__id',
    'certificate_applicant__certificate_id',
    'idLegalSubject',
    'idEgrul',
    'idApplicantType',
    'idLegalSubjectType',
    'certificate_applicant__fullName',
    'shortName',
    'idPerson',
    'surname',
    'firstName',
    'patronymic',
    'headPosition',
    'ogrn',
    'ogrnAssignDate',
    'inn',
    'kpp',
    'idLegalForm',
    'certificate_applicant__regDate',
    'regOrganName',
    'addlRegInfo',
    'isEecRegister',
    'passportIssueDate',
    'passportIssuedBy',
    'passportNum',
    'idPersonDoc',


    'certification_authority__id',
    'certification_authority__certificate_id',
    'idCertificationAuthority',
    'certification_authority__fullName',
    'accredOrgName',
    'attestatRegNumber',
    'attestatRegDate',
    'attestatEndDate',
    'idRal',
    'ogrn',
    'idPerson',
    'firstName',
    'surname',
    'patronymic',

    'id',
    'certificate_id',
    'status',
    'begin_date',
    'end_date',
    'comment',
    'publish_date',
    'status_changes_by',
    'idChangeStatus',
];


const DEFAULT_FILTERS: Partial<Record<TCertificateModel, string[]>> & TDefaultPaginationRequest = {
    page: 1,
    perPage: "10",
    order: ""
}

const DEFAULT_REQUEST = {
    page: 1,
    perPage: '10',
    order: "",
    user_columns: DEFAULT_COLUMNS
}

const CELL_WIDTH: Partial<Record<TCertificateModel, number>> = {
    productIdentificationGtin: 400
}

const ORDERABLE_CELLS: TCertificateModel[] = ["blankNumber"]

const HIDDEN_COLUMNS: TCertificateModel[] = ["link", "certificate_link", "id",]


export const config: IConfig<TCertificateModel> = {
    DICTIONARY,
    DEFAULT_COLUMNS,
    DEFAULT_FILTERS,
    DEFAULT_REQUEST,
    CELL_WIDTH,
    ORDERABLE_CELLS,
    HIDDEN_COLUMNS,
}

export default {
    DEFAULT_FILTERS,
    DEFAULT_REQUEST,
    DEFAULT_COLUMNS,
    DICTIONARY,
    CELL_WIDTH,
    ORDERABLE_CELLS,
    HIDDEN_COLUMNS
}